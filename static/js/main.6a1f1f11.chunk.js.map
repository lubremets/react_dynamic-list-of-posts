{"version":3,"sources":["components/User.js","components/Comment.js","components/CommentList.js","components/Post.js","components/PostList.js","App.js","index.js"],"names":["User","props","react_default","a","createElement","Fragment","user","name","email","address","street","Comment","_ref","CommentList","comments","map","item","comment","key","id","Post","title","body","commentsArray","components_CommentList","PostList","posts","post","BaseUrl","getPostsWithUsersAndComment","users","Object","objectSpread2","find","elem","userId","filter","postId","App","state","loading","postsWithUsersAndComment","setQueryWithDebounce","_","debounce","query","_this","findTitle","LoadPosts","regenerator_default","async","_context","prev","next","setState","t0","awrap","getPostsList","t1","sent","t2","call","stop","_ref2","_context2","Promise","all","getDataFromServer","slicedToArray","abrupt","url","response","_context3","fetch","concat","json","event","prevstete","toConsumableArray","includes","_this2","this","_this$state","className","type","onClick","length","onChange","target","value","components_PostList","React","Component","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.6a1f1f11.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport default function User(props) {\n  return (\n    <>\n      <li>\n        {props.user.name}\n      </li>\n      <li>\n        {props.user.email}\n      </li>\n      <li>\n        {props.user.address.street}\n      </li>\n    </>\n  );\n}\n\nUser.propTypes = {\n  user: PropTypes.shape({\n    name: PropTypes.string,\n    email: PropTypes.string,\n    address: PropTypes.shape({\n      street: PropTypes.string,\n    }).isRequired,\n  }).isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport default function Comment({ name, email }) {\n  return (\n    <>\n      <li>{name}</li>\n      <li>{email}</li>\n    </>\n  );\n}\n\nComment.propTypes = {\n  name: PropTypes.string.isRequired,\n  email: PropTypes.string.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Comment from './Comment';\n\nfunction CommentList(props) {\n  return (\n    props.comments.map(item => <Comment comment={item} key={item.id} />)\n  );\n}\n\nCommentList.propTypes = {\n  comments: PropTypes.arrayOf(PropTypes.object).isRequired,\n};\n\nexport default CommentList;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport User from './User';\nimport CommentList from './CommentList';\n\nexport default function Post({ title, body, user, commentsArray }) {\n  return (\n    <>\n      <h3>\n        {'Title: '}\n        {title}\n      </h3>\n      <h4>\n        {'Body: '}\n        {body}\n      </h4>\n      <h4>\n        {<User user={user} />}\n      </h4>\n      <h4>\n        {<CommentList comments={commentsArray} />}\n      </h4>\n      <br />\n    </>\n  );\n}\n\nPost.propTypes = {\n  title: PropTypes.string.isRequired,\n  body: PropTypes.string.isRequired,\n  user: PropTypes.objectOf.isRequired,\n  commentsArray: PropTypes.arrayOf.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Post from './Post';\n\nfunction PostList(props) {\n  return (\n    props.posts.map(item => <Post post={item} key={item.id} />)\n  );\n}\n\nPostList.propTypes = {\n  posts: PropTypes.arrayOf(PropTypes.object).isRequired,\n};\n\nexport default PostList;\n","import React from 'react';\n\nimport './App.css';\nimport _ from 'lodash';\n\nimport PostList from './components/PostList';\n\nconst BaseUrl = 'https://jsonplaceholder.typicode.com/';\n\nfunction getPostsWithUsersAndComment(posts, users, comments) {\n  return posts.map(item => ({\n    ...item,\n    user: users.find(elem => item.userId === elem.id),\n    commentsArray: comments.filter(elem => elem.postId === item.id),\n  }));\n}\n\nclass App extends React.Component {\n  state = {\n    loading: false,\n    postsWithUsersAndComment: [],\n  }\n\n  setQueryWithDebounce = _.debounce((query) => {\n    this.findTitle(query);\n  }, 1000);\n\n  LoadPosts = async() => {\n    this.setState({\n      loading: true,\n    });\n    this.setState({\n      postsWithUsersAndComment: await this.getPostsList(),\n    });\n  };\n\n  getPostsList = async() => {\n    const [posts, users, comments] = await Promise.all([\n      this.getDataFromServer('posts'),\n      this.getDataFromServer('users'),\n      this.getDataFromServer('comments'),\n    ]);\n\n    return getPostsWithUsersAndComment(posts, users, comments);\n  };\n\n  getDataFromServer = async(url) => {\n    const response = await fetch(`${BaseUrl}${url}`);\n\n    return response.json();\n  };\n\n  findTitle = (event) => {\n    this.setState(prevstete => ({\n      postsWithUsersAndComment:\n      [...prevstete.postsWithUsersAndComment].filter(item => (\n        (item.title + item.body).includes(event))),\n    }));\n  };\n\n  render() {\n    const { postsWithUsersAndComment, loading } = this.state;\n\n    return (\n      <>\n        <div className=\"App\">\n          <h1>Dunamic list of posts</h1>\n          {!loading\n            && <button type=\"button\" onClick={this.LoadPosts}>Load</button>\n          }\n          {loading && !postsWithUsersAndComment.length\n            ? 'loading...' : ''}\n          {loading && postsWithUsersAndComment.length\n            ? (\n              <input onChange={event => (\n                this.setQueryWithDebounce(event.target.value))}\n              />\n            )\n            : ''}\n          {postsWithUsersAndComment.length && loading\n            ? <PostList posts={postsWithUsersAndComment} /> : ''\n          }\n        </div>\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}